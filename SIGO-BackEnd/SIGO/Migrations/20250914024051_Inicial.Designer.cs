// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SIGO.Data;

#nullable disable

namespace SIGO.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250914024051_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SIGO.Objects.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf_Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpf_cnpj");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<DateOnly>("DataNasc")
                        .HasColumnType("date")
                        .HasColumnName("datanasc");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("obs");

                    b.Property<string>("Razao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("razao");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("senha");

                    b.Property<int>("Sexo")
                        .HasColumnType("integer")
                        .HasColumnName("sexo");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("situacao");

                    b.Property<int>("TipoCliente")
                        .HasColumnType("integer")
                        .HasColumnName("TipoCliente");

                    b.HasKey("Id");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("SIGO.Objects.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro");

                    b.Property<int>("Cep")
                        .HasMaxLength(100)
                        .HasColumnType("integer")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cidade");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("estado");

                    b.Property<int>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("pais");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("rua");

                    b.HasKey("Id");

                    b.ToTable("endereco");
                });

            modelBuilder.Entity("SIGO.Objects.Models.EnderecoCliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("clienteid");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("integer")
                        .HasColumnName("enderecoid");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("complemento");

                    b.HasKey("ClienteId", "EnderecoId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("EnderecoClientes");
                });

            modelBuilder.Entity("SIGO.Objects.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("clienteid");

                    b.Property<int>("DDD")
                        .HasMaxLength(3)
                        .HasColumnType("integer")
                        .HasColumnName("ddd");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("telefone");
                });

            modelBuilder.Entity("SIGO.Objects.Models.EnderecoCliente", b =>
                {
                    b.HasOne("SIGO.Objects.Models.Cliente", "Cliente")
                        .WithMany("EnderecoClientes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIGO.Objects.Models.Endereco", "Endereco")
                        .WithMany("EnderecoClientes")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("SIGO.Objects.Models.Telefone", b =>
                {
                    b.HasOne("SIGO.Objects.Models.Cliente", "Clientes")
                        .WithMany("Telefones")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("SIGO.Objects.Models.Cliente", b =>
                {
                    b.Navigation("EnderecoClientes");

                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("SIGO.Objects.Models.Endereco", b =>
                {
                    b.Navigation("EnderecoClientes");
                });
#pragma warning restore 612, 618
        }
    }
}
